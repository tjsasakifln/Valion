# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to ignore these files since the code is
#  intended to run in multiple environments; otherwise, check them in:
# .idea/

# Visual Studio Code
.vscode/
*.code-workspace

# Local History for Visual Studio Code
.history/

# Built Visual Studio Code Extensions
*.vsix

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Windows
*.lnk

# Linux
*~

# Temporary files
*.tmp
*.temp
*.swp
*.swo
*~

# IDE files
.idea/
*.iml
*.iws
*.ipr
.project
.pydevproject
.settings/
.classpath
.factorypath
.buildpath
.target
.tern-project
.texlipse
.autotools
.cproject
.metadata
.recommenders

# Logs
*.log
logs/
log/

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node_modules
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# next.js build output
.next

# nuxt.js build output
.nuxt

# vuepress build output
.vuepress/dist

# Serverless directories
.serverless

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# Application specific directories
uploads/
models/
reports/
temp/
logs/

# Database
*.db
*.sqlite
*.sqlite3

# Docker
.dockerignore
docker-compose.override.yml

# Kubernetes
*.yaml.local
*.yml.local

# Terraform
*.tfstate
*.tfstate.*
.terraform/
.terraformrc
terraform.rc

# Ansible
*.retry

# Vagrant
.vagrant/

# Mac
.DS_Store
.AppleDouble
.LSOverride

# Icon must end with two \r
Icon

# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Claude AI Assistant files
.claude
.claude/
*.claude

# Streamlit
.streamlit/

# Jupyter
.jupyter/

# MLflow
mlruns/
mlflow.db

# Weights and Biases
wandb/

# TensorBoard
runs/

# Model files
*.pkl
*.joblib
*.model
*.pt
*.pth
*.h5
*.hdf5
*.onnx

# Data files
*.csv
*.xlsx
*.xls
*.json
*.parquet
*.feather
*.pickle

# Backup files
*.bak
*.backup
*.old
*.orig

# Archives
*.zip
*.tar
*.tar.gz
*.rar
*.7z

# SSL certificates
*.pem
*.key
*.crt
*.csr
*.p12
*.pfx

# Configuration files with sensitive data
config.ini
config.json
secrets.json
credentials.json

# Local development
.local/
local/
dev/
development/

# Testing
test_data/
test_results/
.coverage
htmlcov/

# Documentation build
docs/_build/
docs/build/

# Cache directories
.cache/
cache/
__pycache__/

# Temporary directories
tmp/
temp/

# Lock files
package-lock.json
yarn.lock
poetry.lock
Pipfile.lock

# IDE workspace files
*.sublime-workspace
*.sublime-project

# JetBrains
.idea/
*.iml

# Eclipse
.project
.pydevproject
.settings/

# NetBeans
nbproject/
nbbuild/
dist/
nbdist/
.nb-gradle/

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# VS Code
.vscode/
.history/

# Local configuration overrides
local_settings.py
.env.local
.env.development.local
.env.test.local
.env.production.local

# Runtime files
*.pid
*.seed
*.pid.lock
*.sock

# Profiling
*.prof

# Memory dumps
*.hprof
*.dump

# System files
.fuse_hidden*
.directory
.Trash-*
.nfs*

# Network
.netrc

# Database dumps
*.sql
*.dump

# Compiled source
*.com
*.class
*.dll
*.exe
*.o
*.so

# Packages
*.7z
*.dmg
*.gz
*.iso
*.jar
*.rar
*.tar
*.zip

# Application logs
*.log
logs/
log/

# OS-specific files
Thumbs.db
ehthumbs.db
Desktop.ini
$RECYCLE.BIN/
.Trashes